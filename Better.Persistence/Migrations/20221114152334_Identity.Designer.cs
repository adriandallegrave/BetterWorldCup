// <auto-generated />
using System;
using Better.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Better.Persistence.Migrations
{
    [DbContext(typeof(BetterContext))]
    [Migration("20221114152334_Identity")]
    partial class Identity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Better.Domain.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pix")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000101"),
                            Balance = 0m,
                            Email = "adriandallegrave@gmail.com",
                            EmailConfirmed = true,
                            Name = "Adrian",
                            Password = "passwordgmail",
                            Pix = "51997561418"
                        });
                });

            modelBuilder.Entity("Better.Domain.Models.Bet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwayGuess")
                        .HasColumnType("int");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HomeGuess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("GameId");

                    b.ToTable("Bets", (string)null);
                });

            modelBuilder.Entity("Better.Domain.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwayScored")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<Guid>("AwayTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HomeScored")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<Guid>("HomeTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Games", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001001"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000002"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000001"),
                            StartTime = new DateTime(2022, 11, 20, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001002"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000003"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000004"),
                            StartTime = new DateTime(2022, 11, 21, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001003"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000004"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000001"),
                            StartTime = new DateTime(2022, 11, 25, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001004"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000002"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000003"),
                            StartTime = new DateTime(2022, 11, 25, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001005"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000001"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000003"),
                            StartTime = new DateTime(2022, 11, 29, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001006"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000004"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000002"),
                            StartTime = new DateTime(2022, 11, 29, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001007"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000007"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000006"),
                            StartTime = new DateTime(2022, 11, 21, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001008"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000008"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000005"),
                            StartTime = new DateTime(2022, 11, 21, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001009"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000007"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000008"),
                            StartTime = new DateTime(2022, 11, 25, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001010"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000005"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000006"),
                            StartTime = new DateTime(2022, 11, 25, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001011"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000005"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000007"),
                            StartTime = new DateTime(2022, 11, 29, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001012"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000006"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000008"),
                            StartTime = new DateTime(2022, 11, 29, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001013"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000010"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000009"),
                            StartTime = new DateTime(2022, 11, 22, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001014"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000012"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000011"),
                            StartTime = new DateTime(2022, 11, 22, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001015"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000010"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000012"),
                            StartTime = new DateTime(2022, 11, 26, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001016"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000011"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000009"),
                            StartTime = new DateTime(2022, 11, 26, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001017"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000009"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000012"),
                            StartTime = new DateTime(2022, 11, 30, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001018"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000011"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000010"),
                            StartTime = new DateTime(2022, 11, 30, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001019"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000016"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000014"),
                            StartTime = new DateTime(2022, 11, 22, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001020"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000013"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000015"),
                            StartTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001021"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000013"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000016"),
                            StartTime = new DateTime(2022, 11, 26, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001022"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000014"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000015"),
                            StartTime = new DateTime(2022, 11, 26, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001023"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000015"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000016"),
                            StartTime = new DateTime(2022, 11, 30, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001024"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000014"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000013"),
                            StartTime = new DateTime(2022, 11, 30, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001025"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000020"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000017"),
                            StartTime = new DateTime(2022, 11, 23, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001026"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000018"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000019"),
                            StartTime = new DateTime(2022, 11, 23, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001027"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000018"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000020"),
                            StartTime = new DateTime(2022, 11, 27, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001028"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000017"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000019"),
                            StartTime = new DateTime(2022, 11, 27, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001029"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000019"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000020"),
                            StartTime = new DateTime(2022, 12, 1, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001030"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000017"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000018"),
                            StartTime = new DateTime(2022, 12, 1, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001031"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000023"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000024"),
                            StartTime = new DateTime(2022, 11, 23, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001032"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000022"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000021"),
                            StartTime = new DateTime(2022, 11, 23, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001033"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000024"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000021"),
                            StartTime = new DateTime(2022, 11, 27, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001034"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000022"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000023"),
                            StartTime = new DateTime(2022, 11, 27, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001035"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000021"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000023"),
                            StartTime = new DateTime(2022, 12, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001036"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000024"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000022"),
                            StartTime = new DateTime(2022, 12, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001037"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000026"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000027"),
                            StartTime = new DateTime(2022, 11, 24, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001038"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000028"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000025"),
                            StartTime = new DateTime(2022, 11, 24, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001039"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000028"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000026"),
                            StartTime = new DateTime(2022, 11, 28, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001040"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000027"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000025"),
                            StartTime = new DateTime(2022, 11, 28, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001041"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000025"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000026"),
                            StartTime = new DateTime(2022, 12, 2, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001042"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000027"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000028"),
                            StartTime = new DateTime(2022, 12, 2, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001043"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000029"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000032"),
                            StartTime = new DateTime(2022, 11, 24, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001044"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000030"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000031"),
                            StartTime = new DateTime(2022, 11, 24, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001045"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000030"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000029"),
                            StartTime = new DateTime(2022, 11, 28, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001046"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000032"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000031"),
                            StartTime = new DateTime(2022, 11, 28, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001047"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000031"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000029"),
                            StartTime = new DateTime(2022, 12, 2, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000001048"),
                            AwayScored = -1,
                            AwayTeamId = new Guid("00000000-0000-0000-0000-000000000032"),
                            HomeScored = -1,
                            HomeTeamId = new Guid("00000000-0000-0000-0000-000000000030"),
                            StartTime = new DateTime(2022, 12, 2, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Better.Domain.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SourceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Teams", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Name = "Catar",
                            ShortName = "CAT",
                            SourceName = "Qatar"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Name = "Equador",
                            ShortName = "EQU",
                            SourceName = "Ecuador"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Name = "Holanda",
                            ShortName = "HOL",
                            SourceName = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "Senegal",
                            ShortName = "SEN",
                            SourceName = "Senegal"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "Estados Unidos",
                            ShortName = "USA",
                            SourceName = "United States"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Name = "Inglaterra",
                            ShortName = "ING",
                            SourceName = "England"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Name = "Ira",
                            ShortName = "IRA",
                            SourceName = "Iran"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Name = "Pais de Gales",
                            ShortName = "PDG",
                            SourceName = "Wales"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Name = "Argentina",
                            ShortName = "ARG",
                            SourceName = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Name = "Arabia Saudita",
                            ShortName = "ARA",
                            SourceName = "Saudi Arabia"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            Name = "Mexico",
                            ShortName = "MEX",
                            SourceName = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            Name = "Polonia",
                            ShortName = "POL",
                            SourceName = "Poland"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            Name = "Australia",
                            ShortName = "AUS",
                            SourceName = "Australia"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            Name = "Dinamarca",
                            ShortName = "DIN",
                            SourceName = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            Name = "Franca",
                            ShortName = "FRA",
                            SourceName = "France"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            Name = "Tunisia",
                            ShortName = "TUN",
                            SourceName = "Tunisia"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            Name = "Alemanha",
                            ShortName = "ALE",
                            SourceName = "Germany"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            Name = "Costa Rica",
                            ShortName = "COS",
                            SourceName = "Costa Rica"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            Name = "Espanha",
                            ShortName = "ESP",
                            SourceName = "Spain"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000020"),
                            Name = "Japao",
                            ShortName = "JAP",
                            SourceName = "Japan"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000021"),
                            Name = "Belgica",
                            ShortName = "BEL",
                            SourceName = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000022"),
                            Name = "Canada",
                            ShortName = "CAN",
                            SourceName = "Canada"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000023"),
                            Name = "Croacia",
                            ShortName = "CRO",
                            SourceName = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000024"),
                            Name = "Marrocos",
                            ShortName = "MAR",
                            SourceName = "Morocco"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000025"),
                            Name = "Brasil",
                            ShortName = "BRA",
                            SourceName = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000026"),
                            Name = "Camaroes",
                            ShortName = "CAM",
                            SourceName = "Cameroon"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000027"),
                            Name = "Suica",
                            ShortName = "SUI",
                            SourceName = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000028"),
                            Name = "Servia",
                            ShortName = "SER",
                            SourceName = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000029"),
                            Name = "Coreia do Sul",
                            ShortName = "COR",
                            SourceName = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000030"),
                            Name = "Gana",
                            ShortName = "GAN",
                            SourceName = "Ghana"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000031"),
                            Name = "Portugal",
                            ShortName = "POR",
                            SourceName = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000032"),
                            Name = "Uruguai",
                            ShortName = "URU",
                            SourceName = "Uruguay"
                        });
                });

            modelBuilder.Entity("Better.Domain.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Better.Domain.Models.Bet", b =>
                {
                    b.HasOne("Better.Domain.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Better.Domain.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Better.Domain.Models.Game", b =>
                {
                    b.HasOne("Better.Domain.Models.Team", "AwayTeam")
                        .WithMany("AwayGames")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Better.Domain.Models.Team", "HomeTeam")
                        .WithMany("HomeGames")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");
                });

            modelBuilder.Entity("Better.Domain.Models.Transaction", b =>
                {
                    b.HasOne("Better.Domain.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Better.Domain.Models.Team", b =>
                {
                    b.Navigation("AwayGames");

                    b.Navigation("HomeGames");
                });
#pragma warning restore 612, 618
        }
    }
}
